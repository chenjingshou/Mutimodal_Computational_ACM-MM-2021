# ACM MM 2021 Watch and Buy Challenge 项目工作文档

## 项目概述
- **任务**: 面向淘宝直播的多模态商品识别
- **数据集**: Watch and Buy (WAB) - 70,000个视频-商品匹配对
- **团队**: 3人协作开发（chenjingshou, Ljlss152, Willyuliam）

## 已完成工作记录

### 一、项目调研与理解（9月17日）

#### 1.1 任务分析
- 理解了Watch and Buy Challenge的核心任务：从直播视频中识别对应商品
- 明确了技术挑战：跨域差异、多模态融合、大形变/遮挡问题
- 掌握了数据集规模：1,042,178张图像，1,654,780个边界框，23个服装类别

#### 1.2 技术方案调研
- 研究了2021年基础方案：
  - 文本匹配（GRU + BPR-MF）
  - 图像匹配（FasterRCNN）
  - 多模态融合
- 调研了最新技术进展（2024-2025）：
  - SGMN时空图网络
  - RAG和LLM增强方法

### 二、环境搭建（9月18日-9月26日）

#### 2.1 服务器配置
- 成功连接GPU服务器（211.87.224.135:1922）
- 获得4块Tesla V100 GPU（每块32GB显存）计算资源
- 从MobaXterm迁移到VSCode Remote SSH连接方式

#### 2.2 开发环境
- 创建sgmn conda环境（Python 3.8）- 后因兼容性问题弃用
- 最终使用base环境（Python 3.12）成功配置：
  - PyTorch 2.5.1 with CUDA支持
  - CLIP模型库
  - timm、transformers、pytorchvideo等依赖
  - 验证4块GPU均可正常使用

#### 2.3 代码准备
- 克隆SGMN官方代码到 `/home/user/main/SGMN`
- 创建GitHub仓库 `Mutimodal_Computational_ACM-MM-2021` 用于团队协作
- 添加协作者权限管理

### 三、数据集探索与处理

#### 3.1 数据结构理解
确认了数据集组织结构：
```
/home/user/main/data/pre_processed_data/
├── processed_training_data/  # 35,000个训练样本
│   └── 000003/               # 样本ID文件夹
│       ├── 0.jpg            # 第0帧
│       ├── 40.jpg           # 第40帧
│       └── ...              # 每40帧一张，共10张
└── processed_testing_data/   # 15,000个测试样本
```

#### 3.2 数据特征
- 每个视频400帧，提取10个关键帧（0, 40, 80, ..., 360）
- 图像已预处理为jpg格式
- 包含视频帧、商品图像、标注信息、文本描述等多模态数据

### 四、基础代码实现

#### 4.1 测试脚本
创建了环境测试脚本 `test_sgmn.py`：
- 验证GPU可用性
- 测试PyTorch和CUDA兼容性
- 确认能在GPU上创建和操作张量

#### 4.2 数据加载器框架
创建了 `data_loader_acm_mm21.py`：
- 实现WatchBuyDataset类
- 支持加载预处理后的视频关键帧
- 集成CLIP预处理pipeline
- 实现批处理数据加载

#### 4.3 模型框架
设计了CLIPMatcher基础模型架构：
- 加载预训练CLIP模型（ViT-B/32）
- 实现视频帧编码
- 支持特征提取和归一化

### 五、项目管理

#### 5.1 版本控制
- 建立Git仓库和协作流程
- 配置.gitignore避免上传大文件
- 创建项目目录结构

#### 5.2 文档记录
- 维护每日工作日志
- 记录环境配置步骤
- 整理技术难点和解决方案

## 当前状态总结

**已完成**：
- ✅ 环境配置（Python、PyTorch、CUDA、CLIP等）
- ✅ 数据集理解和访问
- ✅ 基础代码框架搭建
- ✅ GPU资源验证可用
- ✅ 团队协作环境建立

**可运行组件**：
- 环境测试脚本正常运行
- 数据加载器框架已实现
- CLIP模型成功加载
- GPU计算验证通过

**资源就绪**：
- 服务器：4×V100 GPU可用
- 数据：35,000训练样本 + 15,000测试样本
- 代码：SGMN参考实现 + 自定义数据加载器

---
*文档更新日期：2025年9月26日*

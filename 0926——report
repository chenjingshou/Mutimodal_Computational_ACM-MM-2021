ACM MM 2021 Watch and Buy Challenge 项目阶段总结报告
项目概况
项目名称：面向淘宝直播的多模态商品识别系统
数据集：Watch and Buy (WAB) - 70,000个视频-商品匹配对
团队成员：chenjingshou, Ljlss152, Willyuliam
工作周期：2024年9月17日 - 9月27日
服务器资源：4×Tesla V100-SXM2-32GB GPU
一、项目理解与调研（9月17日）
1.1任务定义
核心任务：从直播视频中自动识别主播介绍的商品
技术挑战： 
o跨域差异（直播视频 vs 商品图片）
o多模态融合（视频、音频、文本）
o视觉挑战（大形变、遮挡、相似性）
1.2数据集分析
规模：1,042,178张图像，1,654,780个边界框
类别：23个服装类别
结构：35,000训练样本 + 15,000测试样本
特征：每个视频提取10个关键帧（0, 40, 80, ..., 360）
二、环境搭建历程（9月18日-9月26日）
2.1最终环境配置
组件	版本/配置
操作系统	Ubuntu 18.04 (Docker容器)
Python	3.12.11 (conda base环境)
PyTorch	2.5.1 with CUDA 11.1
GPU	4×Tesla V100-SXM2-32GB
核心库	CLIP, timm, transformers, opencv-python
2.2环境问题解决记录
1.
Python环境兼容性
2.
o问题：sgmn环境（Python 3.8）PyTorch导入失败
o解决：弃用sgmn环境，使用base环境（Python 3.12）
3.
CLIP模型文件
4.
问题：初次下载文件不完整（197MB vs 338MB）
解决：重新下载完整模型文件
5.
共享内存限制
6.
问题：Docker容器共享内存仅64MB，导致DataLoader崩溃
解决：设置num_workers=0，使用单进程数据加载
7.
数据类型不匹配
8.
问题：CLIP输出float16与Linear层float32不匹配
解决：添加.float()类型转换
三、代码实现成果（9月26日-9月27日）
3.1已完成组件
✅ 环境测试脚本：验证GPU、PyTorch、CUDA配置
✅ 数据加载器：支持批处理的视频帧加载
✅ CLIP Baseline模型：基于CLIP的视频编码器
✅ 训练框架：支持多GPU训练的完整pipeline
3.2模型架构
视频输入 [batch, 10, 3, 224, 224]
↓
CLIP编码器（冻结参数）
↓
时序聚合（平均池化）
↓
可训练分类头（512→256→128→100类）
3.3训练验证
成功在100个训练样本上启动训练
四、关键问题与解决方案汇总
问题类型	具体表现	解决方案	状态
环境兼容	ImportError: libtorch_cpu.so	切换到base环境	✅
资源限制	共享内存不足(64MB)	num_workers=0	✅
数据类型	RuntimeError: dtype mismatch	添加.float()转换	✅
模型文件	CLIP模型下载不完整	重新下载完整文件	✅
五、项目进展评估
5.1已完成里程碑
[x] 项目调研和任务理解
[x] 环境配置和依赖安装
[x] 数据集结构分析
[x] 基础代码框架搭建
[x] CLIP baseline实现
[x] 小规模训练验证
5.2待完成任务
[ ] 扩大训练规模（500→2000→全量数据）
[ ] 集成多模态信息（文本、音频）
[ ] 实现SGMN时空图模块
[ ] 性能优化和评估
六、下一阶段计划
短期（1-3天）
1.完成当前100样本训练，评估结果
2.逐步扩大到500-1000个样本
3.优化数据加载效率
中期（1周）
1.在全量数据上训练
2.添加文本模态融合
3.实现对比学习损失
长期（2周+）
1.集成SGMN时空图网络
2.多模态注意力机制
3.部署推理服务
七、经验总结
成功经验
1.采用渐进式开发策略，先小规模验证
2.详细记录问题和解决方案
3.充分利用多GPU资源（DataParallel）
教训启示
1.Docker容器环境需要注意资源限制
2.深度学习框架版本兼容性需谨慎处理
3.大规模数据处理需要优化策略
八、资源与参考
代码仓库：https://github.com/[team]/Mutimodal_Computational_ACM-MM-2021
SGMN参考：https://github.com/adxcreative/SGMN
服务器：211.87.224.135:1922
数据路径：/home/user/main/data/pre_processed_data/

文档编制：ACM MM 2021项目组
最后更新：2024年9月27日
下次汇报：2024年9月30日
